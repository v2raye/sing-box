{
  "dns": {
    "fakeip": {
      "enabled": true,
      "inet4_range": "198.18.0.0/15",
      "inet6_range": "fc00::/18"
    },
    "servers": [
      {
        "tag": "google",
        "address": "https://8.8.8.8/dns-query",
        "detour": "Proxy"
      },
      {
        "tag": "ali",
        "address": "h3://223.5.5.5/dns-query",
        "detour": "direct"
      },
      {
        "tag": "fakeip",
        "address": "fakeip"
      },
      {
        "tag": "block",
        "address": "rcode://success"
      }	    
    ],
    "rules": [
      {
        "domain": [
          "ghProxy.com",
          "cdn.jsdelivr.net",
          "testingcf.jsdelivr.net"
        ],
        "server": "fakeip"
      },
      {
        "outbound": "any",
        "server": "ali",
        "disable_cache": true
      },
      {
        "rule_set": "cn",
        "server": "ali"
      },       
      {
        "clash_mode": "Direct",
        "server": "ali"
      },
      {
        "clash_mode": "Global",
        "server": "fakeip"
      },
      {
        "inbound": "tun",
        "query_type": [
          "A",
          "AAAA"
        ],
        "server": "fakeip",
        "rewrite_ttl": 1
      },
      {
        "type": "logical",
        "mode": "and",
        "rules": [	  
          {
            "rule_set": "geolocation-!cn"
          },
          {
            "rule_set": "cnip"
          }
        ],
        "server": "google"
      }
    ],
    "Final": "ali",
    "independent_cache": true
  },
  "route": {
    "rules": [
      {
        "type": "logical",
        "mode": "or",
        "rules": [
          {
            "protocol": "dns"
          },
          {
            "port": 53
          }
        ],
        "outbound": "dns-out"
      },
      {
        "ip_is_private": true,
        "outbound": "direct"
      },
      {
        "clash_mode": "Direct",
        "outbound": "direct"
      },
      {
        "clash_mode": "Global",
        "outbound": "Proxy"
      },
      {
        "type": "logical",
        "mode": "or",
        "rules": [
          {
            "domain_regex": "^stun\\..+"
          },
          {
            "domain_keyword": [
              "stun",
              "httpdns"
            ]
          },
          {
            "port": 853
          },
          {
            "network": "udp",
            "port": 443
          },
          {
            "protocol": "stun"
          }
        ],
        "outbound": "block"
      },
      {
        "domain": [
          "clash.razord.top",
          "yacd.metacubex.one",
          "yacd.haishan.me",
          "d.metacubex.one"
        ],
        "outbound": "direct"
      },	  
      {
        "rule_set": "bilibili",
        "outbound": "bilibili"
      },
      {
        "rule_set": "Netflix",
        "outbound": "Netflix"
      },
      {
        "rule_set": "YouTube",
        "outbound": "YouTube"
      },
      {
        "rule_set": "Openai",
        "outbound": "Openai"
      },
      {
        "rule_set": "Google",
        "outbound": "Google"
      },
      {
        "rule_set": "Apple",
        "outbound": "Apple"
      },
      {
        "ip_cidr": [
          "91.108.16.0/21",
          "91.108.56.0/23",
          "149.154.168.0/22",
          "2001:b28:f23c::/48",
          "2001:b28:f23f::/48"
        ],
        "outbound": "Singapore"
      },
      {
        "ip_cidr": [
          "91.108.12.0/22",
          "149.154.172.0/22",
          "2001:b28:f23d::/48"
        ],
        "outbound": "United States"
      },
      {
        "ip_cidr": [
          "5.28.192.0/18",
          "91.105.192.0/23",
          "91.108.4.0/22",
          "91.108.8.0/22",
          "91.108.56.0/22",
          "95.161.64.0/20",
          "109.239.140.0/24",
          "149.154.160.0/21",
          "185.76.151.0/24",
          "2001:67c:4e8::/48",
          "2a0a:f280:203::/48"
        ],
        "outbound": "Germany"
      },
      {
        "rule_set": [
	      "cn", 
	      "cnip"
	    ],
        "outbound": "direct"
      },	    
      {
        "rule_set": "geolocation-!cn",
        "outbound": "Proxy"
      },
      {
        "inbound": [
          "tun",
          "mixed"
        ],
        "outbound": "loop"
      }
    ],
    "rule_set": [
      {
        "tag": "bilibili",
        "type": "remote",
        "format": "binary",
        "url": "https://mirror.ghproxy.com/https://raw.githubusercontent.com/v2raye/sing-box-rule/main/rule/Bilibili.srs",
        "download_detour": "direct"
      },
      {
        "tag": "Apple",
        "type": "remote",
        "format": "binary",
        "url": "https://mirror.ghproxy.com/https://raw.githubusercontent.com/v2raye/sing-box-rule/main/rule/Apple.srs",
        "download_detour": "direct"
      },	
      {
        "tag": "Netflix",
        "type": "remote",
        "format": "binary",
        "url": "https://mirror.ghproxy.com/https://raw.githubusercontent.com/v2raye/sing-box-rule/main/rule/Netflix.srs",
        "download_detour": "direct"
      },
      {
        "tag": "Openai",
        "type": "remote",
        "format": "binary",
        "url": "https://mirror.ghproxy.com/https://raw.githubusercontent.com/v2raye/sing-box-rule/main/rule/OpenAI.srs",
        "download_detour": "direct"
      },
      {
        "tag": "Microsoft",
        "type": "remote",
        "format": "binary",
        "url": "https://mirror.ghproxy.com/https://raw.githubusercontent.com/v2raye/sing-box-rule/main/rule/Microsoft.srs",
        "download_detour": "direct"
      },
      {
        "tag": "YouTube",
        "type": "remote",
        "format": "binary",
        "url": "https://mirror.ghproxy.com/https://raw.githubusercontent.com/v2raye/sing-box-rule/main/rule/YouTube.srs",
        "download_detour": "direct"
      },
      {
        "tag": "Google",
        "type": "remote",
        "format": "binary",
        "url": "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/google.srs",
        "download_detour": "direct"
      },
      {
        "tag": "geolocation-!cn",
        "type": "remote",
        "format": "binary",
        "url": "https://mirror.ghproxy.com/https://raw.githubusercontent.com/v2raye/sing-box-rule/main/rule/Proxy.srs",
        "download_detour": "direct"
      },
      {
        "tag": "cnip",
        "type": "remote",
        "format": "binary",
        "url": "https://mirror.ghproxy.com/https://raw.githubusercontent.com/v2raye/sing-box-rule/main/rule/CN-ip-cidr.srs",
        "download_detour": "direct"
      },
      {
        "tag": "cn",
        "type": "remote",
        "format": "binary",
        "url": "https://mirror.ghproxy.com/https://raw.githubusercontent.com/v2raye/sing-box-rule/main/rule/Domestic.srs",
        "download_detour": "direct"
      }
    ],
    "Final": "Final",
    "auto_detect_interface": true
  },
  "outbounds": [
    {
      "tag": "Proxy",
      "type": "selector",
      "outbounds": [
        "Hong Kong",
        "Taiwan",
        "Japan",
        "Singapore",
        "United States",
        "direct"
      ],
      "default": "Taiwan"
    },
    {
      "tag": "Google",
      "type": "selector",
      "outbounds": [
        "Proxy",
        "Hong Kong",
        "Taiwan",
        "Japan",
        "Singapore",
        "United States"
      ],
      "default": "Proxy"
    },
    {
      "tag": "Apple",
      "type": "selector",
      "outbounds": [
        "Proxy",
        "direct",
        "Hong Kong",
        "Taiwan",
        "Japan",
        "Singapore",
        "United States"
      ],
      "default": "direct"
    },
    {
      "tag": "bilibili",
      "type": "selector",
      "outbounds": [
        "direct",
        "Hong Kong",
        "Taiwan"
      ],
      "default": "direct"
    },
    {
      "tag": "Netflix",
      "type": "selector",
      "outbounds": [
        "Proxy",
        "Hong Kong",
        "Taiwan",
        "Japan",
        "Singapore",
        "United States"
      ],
      "default": "Singapore"
    },
    {
      "tag": "YouTube",
      "type": "selector",
      "outbounds": [
        "Proxy",
        "Hong Kong",
        "Taiwan",
        "Japan",
        "Singapore",
        "United States"
      ],
      "default": "Proxy"
    },
    {
      "tag": "Openai",
      "type": "selector",
      "outbounds": [
        "Hong Kong",
        "Taiwan",
        "Japan",
        "Singapore",
        "United States"
      ],
      "default": "United States"
    },
    {
      "tag": "Microsoft",
      "type": "selector",
      "outbounds": [
	"direct",
        "Hong Kong",
        "Taiwan",
        "Japan",
        "Singapore",
        "United States"
      ],
      "default": "direct"
    },
    {
      "tag": "Final",
      "type": "selector",
      "outbounds": [
        "Proxy",
        "direct"
      ],
      "default": "Proxy"
    },
    {
      "tag": "Hong Kong",
      "type": "selector",
      "outbounds": []
    },
    {
      "tag": "Taiwan",
      "type": "selector",
      "outbounds": []
    },
    {
      "tag": "Japan",
      "type": "selector",
      "outbounds": []
    },
    {
      "tag": "Singapore",
      "type": "selector",
      "outbounds": []
    },
    {
      "tag": "United States",
      "type": "selector",
      "outbounds": []
    },
    {
      "tag": "Germany",
      "type": "selector",
      "outbounds": []
    },
    {
      "tag": "direct",
      "type": "direct"
    },
    {
      "tag": "dns-out",
      "type": "dns"
    },
    {
      "type": "block",
      "tag": "block"
    },
    {
      "tag": "loop",
      "type": "socks",
      "server": "127.0.0.1",
      "server_port": 7891
    }
  ],
  "inbounds": [
    {
      "tag": "tun",
      "type": "tun",
      "inet4_address": "172.19.0.0/30",
      "inet6_address": "fdfe:dcba:9876::0/126",
      "stack": "system",
      "auto_route": true,
      "sniff": true,
      "platform": {
        "http_proxy": {
          "enabled": true,
          "server": "127.0.0.1",
          "server_port": 7890
        }
      }
    },
    {
      "tag": "mixed",
      "type": "mixed",
      "listen": "127.0.0.1",
      "listen_port": 7890,
      "sniff": true
    },
    {
      "tag": "loop-in",
      "type": "mixed",
      "listen": "127.0.0.1",
      "listen_port": 7891,
      "sniff": true,
      "domain_strategy": "prefer_ipv4"
    }
  ],
  "experimental": {
    "clash_api": {
      "external_controller": "127.0.0.1:9090",
      "external_ui": "ui",
      "external_ui_download_url": "https://mirror.ghProxy.com/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip",
      "external_ui_download_detour": "direct"
    },
    "cache_file": {
      "enabled": true,
      "store_fakeip": true
    }
  },
  "log": {
    "disabled": false,
    "level": "debug",
    "timestamp": true
  }
}
